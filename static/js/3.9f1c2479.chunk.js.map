{"version":3,"sources":["shared/Navbar/Navbar.js","components/FrontFace/FrontFace.js","shared/Btns/Btns.js","components/CustomizeFood/Ingredients.js","components/CustomizeFood/IngredientList.js","store/Shared/sharedActionCreators.js","components/CustomizeFood/Breads.js","components/CustomizeFood/FoodList.js","store/Food/foodActionCreators.js","components/CustomizeFood/CustomizeFoods.js"],"names":["Navbar","props","className","children","FrontFace","BtnSelect","id","disabled","onChange","onClick","DropDownListBtn","BtnGrocery","removeItem","addItem","RadioToasted","store","useSelector","food","console","log","typeOfBread","content","flour","Fragment","toUpperCase","name","type","defaultChecked","CheckBoxCondiments","label","Ingredient","ingredient","el","IngredientList","shared","dispatch","useDispatch","allIngredients","currentOrder","map","i","key","unique","actionCreators","Breads","topBread","bttmBread","FoodList","storeFood","useEffect","breadDetails","flourType","cur","breadObj","actionTypes","toppings","obj","condiments","CustomizeFoods"],"mappings":"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","file":"static/js/3.9f1c2479.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Navbar.css';\n\nexport default function Navbar(props) {\n    return (\n        <div className='navbar'>\n            {props.children}\n        </div>\n    )\n}\n","import React from 'react';\n\nimport './FrontFace.css';\n\nconst FrontFace = (props) => {\n    return (\n        <div className={`mainBackground ${props.className}`}>\n            <div className='frontFace'>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default FrontFace;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport './Btns.css';\n\nexport const BtnSelect = (props) => (<button id={props.id} className={`btnSelect ${props.className}`} disabled={props.disabled} onChange={props.onChange} onClick={props.onClick} >{props.children}</button>);\n\nexport const DropDownListBtn = (props) => {\n    return (\n        <button id={props.id} className={`dropDownListBtn ${props.className}`} disabled={props.disabled} onChange={props.onChange} onClick={props.onClick} >{props.children}</button>\n    )\n};\n\nexport const BtnGrocery = (props) => {\n    return (\n        <span className='btnGrocery-span'>\n            <button id={props.id} className={`btnGrocery ${props.className}`} disabled={props.disabled} onClick={props.removeItem} >-</button>\n            <span className='btnGrocery-label' >{props.children}</span>\n            <button id={props.id} className={`btnGrocery ${props.className}`} disabled={props.disabled} onClick={props.addItem} >+</button>\n        </span>\n    )\n};\n\nexport const RadioToasted = (props) => {\n    const store = useSelector(store => store.food);\n    console.log(store.typeOfBread)\n    let content = '';\n    if (store.typeOfBread.flour) {\n        content = (\n            <React.Fragment>\n                <span>TOAST YOUR {store.typeOfBread.flour.toUpperCase()} {store.typeOfBread.name.toUpperCase()}?</span>\n                <label><input type='radio' name='toasted' />YES</label>\n                <label><input type='radio' name='toasted' defaultChecked />NO</label>\n            </React.Fragment>\n        )\n    }\n    return (\n        <span onChange={props.onChange} className='RadioToasted'>\n            {content}\n        </span>\n    )\n}\n\nexport const CheckBoxCondiments = (props) => {\n    return (\n        <section onChange={props.onChange}>\n            <label><input type='checkbox' id={props.label} className={`radioCondiments ${props.className}`} disabled={props.disabled} />{props.label}</label>\n        </section>\n    )\n};","import React from 'react';\n\n\nexport default function Ingredient(props) {\n    let ingredient = '';\n    switch (props.el.name) {\n        case 'American Cheese':\n            ingredient = (<div>American Cheese <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Swiss Cheese':\n            ingredient = (<div>Swiss Cheese <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Mozzarella':\n            ingredient = (<div>Mozzarella <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Cheddar Cheese':\n            ingredient = (<div>Cheddar Cheese <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Pickles':\n            ingredient = (<div>Pickles <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Tomato':\n            ingredient = (<div>Tomato <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Jalapeno':\n            ingredient = (<div>Jalapeno <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Onions':\n            ingredient = (<div>Onions <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Lettuce':\n            ingredient = (<div>Lettuce <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Tuna Salad':\n            ingredient = (<div>Tuna Salad <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Chicken Salad':\n            ingredient = (<div>Chicken Salad <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Egg Salad':\n            ingredient = (<div>Egg Salad <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Vegan Meatballs':\n            ingredient = (<div>Vegan Meatballs <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Meatballs':\n            ingredient = (<div>Meatballs <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Hot Ham':\n            ingredient = (<div>Hot Ham <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Turkey':\n            ingredient = (<div>Turkey <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Chicken':\n            ingredient = (<div>Chicken <i onClick={props.onClick}>X</i></div>);\n            break;\n        case 'Sausage':\n            ingredient = (<div>Sausage <i onClick={props.onClick}>X</i></div>);\n            break;\n        default:\n            return;\n    }\n    return (\n        <div>\n            {ingredient}\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './IngredientList.css';\nimport Ingredient from './Ingredients';\nimport * as actionCreators from '../../store/globalCreators';\n\nexport default function IngredientList() {\n    const store = useSelector(store => store.shared);\n    const dispatch = useDispatch();\n    let allIngredients = store.currentOrder.map((el, i) => {\n        return (<Ingredient key={`${el}${i}`} el={el} onClick={(unique) => dispatch(actionCreators.deleteItemSelected(unique = el.unique))} />)\n    })\n    return (\n        <div>\n            {allIngredients}\n        </div>\n    )\n}\n","import * as actionCreators from '../globalTypes';\n\nexport const removeItem = (id) => {\n    return {\n        type: actionCreators.REMOVE_ITEM,\n        id\n    }\n}\n\nexport const addItem = (obj) => {\n    return {\n        type: actionCreators.ADD_ITEM,\n        obj\n    }\n}\n\nexport const deleteItemSelected = (unique) => {\n    return {\n        type: actionCreators.DELETE_ITEM_SELECTED,\n        unique\n    }\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default function Breads(props) {\n    const store = useSelector(store => store.food);\n    let topBread, bttmBread;\n    let flour = store.typeOfBread.flour\n    switch (store.typeOfBread.name) {\n        case 'Sandwich':\n            console.log(store.typeOfBread.name, flour)\n            if (flour === 'White') {\n                topBread = (<div>sandwich white </div>);\n                bttmBread = (<div>sandwich white </div>);\n            }\n            if (flour === 'Whole Wheat') {\n                topBread = (<div>sandwich wholeWheat </div>);\n                bttmBread = (<div>sandwich wholeWheat </div>);\n            }\n            break;\n        case 'Bagel':\n            if (flour === 'White') {\n                topBread = (<div>Bagel white </div>);\n                bttmBread = (<div>Bagel white </div>);\n            }\n            if (flour === 'Whole Wheat') {\n                topBread = (<div>Bagel whole wheat </div>);\n                bttmBread = (<div>Bagel whole wheat </div>);\n            }\n            if (flour === 'Everything') {\n                topBread = (<div>Bagel everything </div>);\n                bttmBread = (<div>Bagel everything </div>);\n            }\n            if (flour === 'Garlic N Onion') {\n                topBread = (<div>Bagel garlic N onion </div>);\n                bttmBread = (<div>Bagel garlic N onion </div>);\n            }\n            break;\n        case 'Half-Sub':\n            if (flour === 'White') {\n                topBread = (<div>Half-Sub white </div>);\n                bttmBread = (<div>Half-Sub white </div>);\n            }\n            if (flour === 'Whole Wheat') {\n                topBread = (<div>Half-Sub whole wheat </div>);\n                bttmBread = (<div>Half-Sub whole wheat </div>);\n            }\n            break;\n        case 'Full-Sub':\n            if (flour === 'White') {\n                topBread = (<div>Full-Sub white </div>);\n                bttmBread = (<div>Full-Sub white </div>);\n            }\n            if (flour === 'Whole Wheat') {\n                topBread = (<div>Full-Sub whole wheat </div>);\n                bttmBread = (<div>Full-Sub whole wheat </div>);\n            }\n            break;\n        default:\n            return '';\n    }\n    return (\n        <div>\n            {topBread}\n            {props.children}\n            {bttmBread}\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './FoodList.css';\nimport IngredientList from './IngredientList';\nimport Breads from './Breads';\nimport * as actionCreators from '../../store/globalCreators';\nimport { BtnGrocery, CheckBoxCondiments, RadioToasted, DropDownListBtn } from '../../shared/Btns/Btns';\n\nexport default function FoodList() {\n    // const storeShared = useSelector(store => store.shared);\n    const storeFood = useSelector(store => store.food);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        console.log(storeFood)\n    })\n\n    const breadDetails = storeFood.breadDetails.map(el => {\n        let flourType = el.flourType.map((cur) => <DropDownListBtn onClick={(breadObj) => dispatch(actionCreators.setBreadType(breadObj = { ...el, flour: cur }))} className='dropdown_item' > {cur}</DropDownListBtn >)\n        return (\n            <span className='dropdown' key={`${el.id}`}>\n                <DropDownListBtn className='dropbtn' >{el.name}</DropDownListBtn>\n                <span className='dropdown-content' >\n                    {flourType}\n                </span>\n            </span>\n        )\n        // let flourType = el.flourType.map((cur) => <DropDownListBtn key={`${el.id}`} onClick={(breadObj) => dispatch(actionCreators.setBreadType(breadObj = { ...el, flour: cur }))} className='dropdown_item' > {cur}</DropDownListBtn >)\n        // return (\n        //     <span className='dropdown' key={`${el.id}+1`}>\n        //         <DropDownListBtn className='dropbtn' >{el.name}</DropDownListBtn>\n        //         <span className='dropdown-content' >\n        //             {flourType}\n        //         </span>\n        //     </span>\n        // )\n    })\n\n    const toppings = storeFood.toppings.map(el => {\n        return (\n            <BtnGrocery key={`${el.id}`} removeItem={(id) => dispatch(actionCreators.removeItem(id = el.id))} addItem={(obj) => dispatch(actionCreators.addItem(obj = el))} >{el.name}</BtnGrocery>\n        )\n    })\n\n    const condiments = storeFood.condiments.map(el => {\n        return (\n            <CheckBoxCondiments key={`${el.id}`} label={el.name} />\n        )\n    })\n    return (\n        < React.Fragment >\n            <div className='dropdown_bread'>\n                {breadDetails}\n            </div>\n            <RadioToasted onChange={() => dispatch(actionCreators.toggleIsToasted())} />\n            <div className='toppings_div'>\n                {toppings}\n            </div>\n            <Breads >\n                <IngredientList />\n            </Breads>\n            {condiments}\n        </React.Fragment >\n    )\n}\n","import * as actionTypes from '../globalTypes';\n\nexport const toggleIsToasted = () => {\n    return {\n        type: actionTypes.TOGGLE_IS_TOASTED\n    }\n}\n\nexport const setBreadType = (breadObj) => {\n    return {\n        type: actionTypes.SET_BREAD_TYPE,\n        breadObj\n    }\n}","import React from 'react';\n\nimport './CustomizeFood.css';\nimport Navbar from '../../shared/Navbar/Navbar';\nimport FrontFace from '../FrontFace/FrontFace';\nimport FoodList from './FoodList';\n\nexport default function CustomizeFoods() {\n    return (\n        <div>\n            <Navbar >Add Something Relevant here</Navbar>\n            <FrontFace>\n                <FoodList />\n            </FrontFace>\n        </div>\n    )\n}"],"sourceRoot":""}