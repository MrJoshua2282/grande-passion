{"version":3,"sources":["store/Food/foodStore.js","store/Drink/drinkStore.js","store/Shared/sharedStore.js","shared/Spinner/Spinner.js","App.js","serviceWorker.js","index.js","store/Food/foodActionTypes.js","store/Shared/sharedActionTypes.js"],"names":["initialState","typeOfBread","isToasted","breadDetails","id","name","price","flourType","toppings","condiments","included","reducer","state","action","type","actionTypes","breadObj","drinks","currentOrder","allOrders","item","find","el","copy","filter","unique","obj","Math","random","Spinner","className","CustomizeFood","React","lazy","CustomizeDrink","Welcome","Default","App","fallback","path","exact","component","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","food","foodReducer","drink","drinkReducer","shared","sharedReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","TOGGLE_IS_TOASTED","SET_BREAD_TYPE","ADD_ITEM","REMOVE_ITEM","DELETE_ITEM_SELECTED"],"mappings":"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","file":"static/js/main.060a6ae5.chunk.js","sourcesContent":["import * as actionTypes from '../globalTypes';\n\nconst initialState = {\n    typeOfBread: {},\n    isToasted: false,\n    breadDetails: [\n        { id: '1f', name: 'Sandwich', price: 1.5, flourType: ['White', 'Whole Wheat'] },\n        { id: '2f', name: 'Bagel', price: 1.5, flourType: ['White', 'Whole Wheat', 'Everything', 'Garlic N Onion'] },\n        { id: '3f', name: 'Half-Sub', price: 2, flourType: ['White', 'Whole Wheat'] },\n        { id: '4f', name: 'Full-Sub', price: 3.25, flourType: ['White', 'Whole Wheat'] },\n    ],\n    toppings: [\n        { id: '10f', name: 'American Cheese', price: .25 },\n        { id: '11f', name: 'Swiss Cheese', price: .25 },\n        { id: '12f', name: 'Mozzarella', price: .25 },\n        { id: '13f', name: 'Cheddar Cheese', price: .25 },\n        { id: '15f', name: 'Pickles', price: .75 },\n        { id: '16f', name: 'Tomato', price: .75 },\n        { id: '17f', name: 'Jalapeno', price: .75 },\n        { id: '18f', name: 'Onions', price: .75 },\n        { id: '19f', name: 'Lettuce', price: .75 },\n        { id: '20f', name: 'Tuna Salad', price: .75 },\n        { id: '21f', name: 'Chicken Salad', price: .75 },\n        { id: '22f', name: 'Egg Salad', price: .75 },\n        { id: '23f', name: 'Vegan Meatballs', price: 2 },\n        { id: '24f', name: 'Meatballs', price: 2 },\n        { id: '25f', name: 'Hot Ham', price: 2 },\n        { id: '26f', name: 'Turkey', price: 2 },\n        { id: '27f', name: 'Chicken', price: 2 },\n        { id: '28f', name: 'Sausage', price: 2 },\n    ],\n    condiments: [\n        { id: '50f', name: 'Vinegar', included: false },\n        { id: '51f', name: 'Olive Oil', included: false },\n        { id: '52f', name: 'Mayo', included: false },\n        { id: '53f', name: 'Mustard', included: false },\n        { id: '54f', name: 'Ketchup', included: false },\n        { id: '55f', name: 'Spicey Buffalo Sauce', included: false },\n        { id: '56f', name: 'Peanut Butter', included: false },\n        { id: '57f', name: 'Grape Jelly', included: false },\n        { id: '58f', name: 'Butter', included: false },\n        { id: '59f', name: 'Cream Cheese', included: false },\n    ]\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_IS_TOASTED:\n            return {\n                ...state,\n                isToasted: !state.isToasted\n            };\n        case actionTypes.SET_BREAD_TYPE:\n            return {\n                ...state,\n                typeOfBread: action.breadObj\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","const initialState = {\n    drinks: [\n        {}\n    ]\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SOMETHING':\n            return {\n                ...state\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../globalTypes';\n\nconst initialState = {\n    currentOrder: [],\n    allOrders: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.REMOVE_ITEM:\n            const item = state.currentOrder.find(el => el.id === action.id);\n            if (!item) return { ...state }\n            const copy = state.currentOrder.filter(el => el.unique !== item.unique);\n            return {\n                ...state,\n                currentOrder: copy\n            };\n        case actionTypes.ADD_ITEM:\n            return {\n                ...state,\n                currentOrder: [{ ...action.obj, unique: Math.random() }, ...state.currentOrder]\n            };\n        case actionTypes.DELETE_ITEM_SELECTED:\n            return {\n                ...state,\n                currentOrder: state.currentOrder.filter(el => el.unique !== action.unique)\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\n\nimport './Spinner.css';\n\nexport default function Spinner() {\n    return (\n        <div className=\"spinner\">\n            <div className=\"double-bounce1\"></div>\n            <div className=\"double-bounce2\"></div>\n        </div>\n    )\n}\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Spinner from './shared/Spinner/Spinner';\nconst CustomizeFood = React.lazy(() => import('./components/CustomizeFood/CustomizeFoods'));\nconst CustomizeDrink = React.lazy(() => import('./components/CustomizeDrink/CustomizeDrink'));\nconst Welcome = React.lazy(() => import('./components/Welcome/Welcome'));\nconst Default = React.lazy(() => import('./components/Default/Default'));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<Spinner />} >\n        <Switch>\n          <Route path='/' exact component={Welcome} />\n          <Route path='/customize/food' exact component={CustomizeFood} />\n          <Route path='/customize/drink' exact component={CustomizeDrink} />\n          <Route component={Default} />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport foodReducer from './store/Food/foodStore';\nimport drinkReducer from './store/Drink/drinkStore';\nimport sharedReducer from './store/Shared/sharedStore';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  food: foodReducer,\n  drink: drinkReducer,\n  shared: sharedReducer\n});\n\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const TOGGLE_IS_TOASTED = 'TOGGLE_IS_TOASTED';\nexport const SET_BREAD_TYPE = 'SET_BREAD_TYPE';","export const ADD_ITEM = 'ADD_ITEM';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const DELETE_ITEM_SELECTED = 'DELETE_ITEM_SELECTED';\n"],"sourceRoot":""}